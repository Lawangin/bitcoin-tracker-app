{"version":3,"sources":["components/BitcoinTracker/BitcoinTracker.module.css","components/BitcoinTracker/BitcoinTrackerEuro.module.css","App.module.css","components/BitcoinTracker/BitcoinTracker.js","components/BitcoinTracker/BitcoinTrackerEuro.js","containers/TrackerDisplay/TrackerDisplay.js","App.js","serviceWorker.js","index.js","containers/TrackerDisplay/TrackerDisplay.module.css"],"names":["module","exports","BitcoinTracker","state","tracker","lastUpdate","timer","Number","this","props","setValue","getApiInfo","update","axios","get","then","response","data","time","updated","bpi","USD","rate","slice","usdRate","setState","catch","err","console","log","firstInterval","setInterval","prevProps","prevState","snapshot","clearInterval","now","Date","toLocaleTimeString","Fragment","className","classes","Text","Update","Component","BitcoinTrackerEuro","EUR","eurRate","TrackerDisplay","value","changeHandler","event","target","Cockpit","Select","onChange","TrackerBlock","App","Normalize","Boolean","window","location","hostname","match","ReactDOM","render","basename","process","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.26702d11.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"BitcoinTracker\":\"BitcoinTracker_BitcoinTracker__1OybQ\",\"Text\":\"BitcoinTracker_Text__1oh2E\",\"Update\":\"BitcoinTracker_Update__2M9Hz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"BitcoinTracker\":\"BitcoinTrackerEuro_BitcoinTracker__1pICl\",\"Text\":\"BitcoinTrackerEuro_Text__2gzTR\",\"Update\":\"BitcoinTrackerEuro_Update__2n30n\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__16ZpL\"};","import React, { Component } from 'react';\nimport axios from 'axios';\n\nimport classes from './BitcoinTracker.module.css';\n\nclass BitcoinTracker extends Component {\n    state = {\n        tracker: null,\n        lastUpdate: null\n    };\n\n    componentDidMount() {\n        let timer = Number(this.props.setValue);\n        const getApiInfo = () => {\n            let update = null;\n            axios.get('https://api.coindesk.com/v1/bpi/currentprice.json')\n                .then(response => {\n                    update = response.data.time.updated;\n                    // return setInterval(() => response.data.bpi.USD.rate, 5000);\n                    return response.data.bpi.USD.rate;\n                })\n                .then(rate => rate.slice(0, 8))\n                .then(usdRate => this.setState({ tracker: usdRate, lastUpdate: update}))\n                .catch(err => console.log(err));\n        };\n        getApiInfo();\n        this.firstInterval = setInterval(getApiInfo, Number(timer));\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        if (prevProps.setValue !== this.props.setValue && this.state.tracker !== null) {\n            clearInterval(this.firstInterval);\n            let timer = Number(this.props.setValue);\n            const getApiInfo = () => {\n                let update = null;\n                axios.get('https://api.coindesk.com/v1/bpi/currentprice.json')\n                    .then(response => {\n                        update = response.data.time.updated;\n                        // return setInterval(() => response.data.bpi.USD.rate, 5000);\n                        return response.data.bpi.USD.rate;\n                    })\n                    .then(rate => rate.slice(0, 8))\n                    .then(usdRate => this.setState({ tracker: usdRate, lastUpdate: update}))\n                    .catch(err => console.log(err));\n            };\n            getApiInfo();\n            this.firstInterval = setInterval(getApiInfo, Number(timer));\n        }\n    }\n\n    render () {\n        const now = new Date().toLocaleTimeString();\n\n        return (\n            <React.Fragment>\n                <div className={classes.Text}>\n                    USD<br />\n                    Bitcoin\n                </div>\n                <div className={classes.BitcoinTracker}>\n                    ${this.state.tracker}\n                </div>\n                <div className={classes.Update}>\n                    Last Update: {now}\n                </div>\n            </React.Fragment>\n        );\n    }\n}\n\nexport default BitcoinTracker;","import React, { Component } from 'react';\nimport axios from 'axios';\n\nimport classes from './BitcoinTrackerEuro.module.css';\n\nclass BitcoinTrackerEuro extends Component {\n    state = {\n        tracker: null,\n        lastUpdate: null\n    };\n\n    componentDidMount() {\n        let timer = Number(this.props.setValue);\n        const getApiInfo = () => {\n            let update = null;\n            axios.get('https://api.coindesk.com/v1/bpi/currentprice.json')\n                .then(response => {\n                    update = response.data.time.updated;\n                    // return setInterval(() => response.data.bpi.USD.rate, 5000);\n                    return response.data.bpi.EUR.rate;\n                })\n                .then(rate => rate.slice(0, 8))\n                .then(eurRate => this.setState({ tracker: eurRate, lastUpdate: update}))\n                .catch(err => console.log(err));\n        };\n        getApiInfo();\n        this.firstInterval = setInterval(getApiInfo, Number(timer));\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        if (prevProps.setValue !== this.props.setValue && this.state.tracker !== null) {\n            clearInterval(this.firstInterval);\n            let timer = Number(this.props.setValue);\n            const getApiInfo = () => {\n                let update = null;\n                axios.get('https://api.coindesk.com/v1/bpi/currentprice.json')\n                    .then(response => {\n                        update = response.data.time.updated;\n                        // return setInterval(() => response.data.bpi.USD.rate, 5000);\n                        return response.data.bpi.EUR.rate;\n                    })\n                    .then(rate => rate.slice(0, 8))\n                    .then(eurRate => this.setState({ tracker: eurRate, lastUpdate: update}))\n                    .catch(err => console.log(err));\n            };\n            getApiInfo();\n            this.firstInterval = setInterval(getApiInfo, Number(timer));\n        }\n    }\n\n    render () {\n        const now = new Date().toLocaleTimeString();\n        return (\n            <React.Fragment>\n                <div className={classes.Text}>\n                    EUR<br />\n                    Bitcoin\n                </div>\n                <div className={classes.BitcoinTracker}>\n                    €{this.state.tracker}\n                </div>\n                <div className={classes.Update}>\n                    Last Update: {now}\n                </div>\n            </React.Fragment>\n        );\n    }\n}\n\nexport default BitcoinTrackerEuro;","import React, { Component } from 'react';\n\nimport classes from './TrackerDisplay.module.css';\nimport BitcoinTracker from \"../../components/BitcoinTracker/BitcoinTracker\";\nimport BitcoinTrackerEuro from \"../../components/BitcoinTracker/BitcoinTrackerEuro\";\n// import axios from \"axios\";\n\nclass TrackerDisplay extends Component {\n    state = {\n        value: '60000',\n    };\n\n    componentDidMount() {\n    }\n\n    changeHandler = (event) => {\n        this.setState({value: event.target.value})\n    };\n\n    render () {\n        const timer = {\n            oneSec: 1000,\n            oneMin: 60000,\n            oneHour: 3600000\n        };\n\n        return (\n            <div className={classes.TrackerDisplay}>\n                <div className={classes.Cockpit}>\n                    <p>Bitcoin in USD and Euro Currency.<br />Updates Every Minute</p>\n                    <label> Select update timer:\n                        <select className={classes.Select} value={this.state.value} onChange={this.changeHandler}>\n                            <option value={timer.oneSec}>One Second</option>\n                            <option value={timer.oneMin}>One Minute</option>\n                            <option value={timer.oneHour}>One Hour</option>\n                        </select>\n                    </label>\n                </div>\n                <div className={classes.TrackerBlock}>\n                    <BitcoinTracker\n                        setValue={this.state.value}\n                    />\n                </div>\n                <div className={classes.TrackerBlock}>\n                    <BitcoinTrackerEuro setValue={this.state.value} />\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default TrackerDisplay;","import React from 'react';\nimport Normalize from 'normalize.css/normalize.css'\n\n// import BitcoinTracker from \"./components/BitcoinTracker/BitcoinTracker\";\nimport TrackerDisplay from './containers/TrackerDisplay/TrackerDisplay';\nimport classes from './App.module.css';\n\n\nfunction App() {\n  return (\n    <div className={Normalize}>\n      <div className={classes.App}>\n        <TrackerDisplay />\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter } from 'react-router-dom'\n\nReactDOM.render(<BrowserRouter basename={process.env.PUBLIC_URL}><App /></BrowserRouter>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"TrackerDisplay\":\"TrackerDisplay_TrackerDisplay__qDVIH\",\"TrackerBlock\":\"TrackerDisplay_TrackerBlock__Silrk\",\"stretch\":\"TrackerDisplay_stretch__2jD6o\",\"Cockpit\":\"TrackerDisplay_Cockpit__2qA4r\",\"Select\":\"TrackerDisplay_Select__zSWe7\"};"],"sourceRoot":""}